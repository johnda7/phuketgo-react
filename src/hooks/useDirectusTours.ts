import { useEffect, useState } from 'react';
import { toursApi } from '../lib/directus';

// –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è fallback (–µ—Å–ª–∏ Directus –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)
const MOCK_TOURS = [
  {
    id: 1,
    slug: 'phi-phi-2days',
    title: '–ü—Ö–∏-–ü—Ö–∏ 2 –¥–Ω—è',
    subtitle: '–†–∞–π—Å–∫–∏–µ –æ—Å—Ç—Ä–æ–≤–∞ —Å –Ω–æ—á—ë–≤–∫–æ–π',
    category: '–û—Å—Ç—Ä–æ–≤–∞',
    duration: '2 –¥–Ω—è',
    group_size: '15 —á–µ–ª–æ–≤–µ–∫',
    price: 4500,
    rating: 4.9,
    description: '–ù–µ–∑–∞–±—ã–≤–∞–µ–º–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –Ω–∞ –æ—Å—Ç—Ä–æ–≤–∞ –ü—Ö–∏-–ü—Ö–∏ —Å –Ω–æ—á—ë–≤–∫–æ–π –≤ –æ—Ç–µ–ª–µ',
    photo_folder: 'phi-phi'
  },
  {
    id: 2,
    slug: 'james-bond-island',
    title: '–û—Å—Ç—Ä–æ–≤ –î–∂–µ–π–º—Å–∞ –ë–æ–Ω–¥–∞',
    subtitle: '–ó–∞–ª–∏–≤ –ü—Ö–∞–Ω–≥ –ù–≥–∞',
    category: '–û—Å—Ç—Ä–æ–≤–∞',
    duration: '1 –¥–µ–Ω—å',
    group_size: '20 —á–µ–ª–æ–≤–µ–∫',
    price: 2800,
    rating: 4.8,
    description: '–≠–∫—Å–∫—É—Ä—Å–∏—è –∫ –∑–Ω–∞–º–µ–Ω–∏—Ç–æ–º—É –æ—Å—Ç—Ä–æ–≤—É –∏–∑ —Ñ–∏–ª—å–º–∞ –ø—Ä–æ –î–∂–µ–π–º—Å–∞ –ë–æ–Ω–¥–∞',
    photo_folder: 'james-bond'
  }
];

/**
 * –•—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —Ç—É—Ä–æ–≤ –∏–∑ Directus
 * @returns {{tours: Array, loading: boolean, error: string|null}} - –°–ø–∏—Å–æ–∫ —Ç—É—Ä–æ–≤, —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—à–∏–±–∫–∞
 */
export function useDirectusTours() {
  const [tours, setTours] = useState<any[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    async function fetchTours() {
      try {
        setLoading(true);
        console.log('üöÄ Fetching tours from Directus...');
        const data = await toursApi.getAll();
        console.log('‚úÖ Tours received:', data.length, data);
        setTours(data);
        setError(null);
      } catch (err) {
        // Fallback –Ω–∞ –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ Directus –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
        console.error('‚ùå Directus error, using mock data:', err);
        setTours(MOCK_TOURS);
        setError(null); // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      } finally {
        setLoading(false);
      }
    }
    
    fetchTours();
  }, []);

  return { tours, loading, error };
}

/**
 * –•—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ —Ç—É—Ä–∞ –ø–æ slug
 * @param {string|undefined} slug - URL slug —Ç—É—Ä–∞
 */
export function useDirectusTour(slug: string | undefined) {
  const [tour, setTour] = useState<any>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    async function fetchTour() {
      if (!slug) {
        setLoading(false);
        return;
      }

      try {
        setLoading(true);
        const data = await toursApi.getBySlug(slug);
        setTour(data);
        setError(null);
      } catch (err) {
        setError(err instanceof Error ? err.message : 'Failed to fetch tour');
        console.error('Error in useDirectusTour:', err);
      } finally {
        setLoading(false);
      }
    }
    
    fetchTour();
  }, [slug]);

  return { tour, loading, error };
}
